// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: Services/ProductService.proto

#include "Services/ProductService.pb.h"
#include "Services/ProductService.grpc.pb.h"

#include <grpcpp/support/async_stream.h>
#include <grpcpp/impl/codegen/sync_stream.h>
#include <gmock/gmock.h>
namespace GrpcApiPractice {

class MockProductServiceStub : public ProductService::StubInterface {
 public:
  MOCK_METHOD3(CreateProduct, ::grpc::Status(::grpc::ClientContext* context, const ::GrpcApiPractice::Product& request, ::GrpcApiPractice::ServiceStatus* response));
  MOCK_METHOD3(AsyncCreateProductRaw, ::grpc::ClientAsyncResponseReaderInterface< ::GrpcApiPractice::ServiceStatus>*(::grpc::ClientContext* context, const ::GrpcApiPractice::Product& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(PrepareAsyncCreateProductRaw, ::grpc::ClientAsyncResponseReaderInterface< ::GrpcApiPractice::ServiceStatus>*(::grpc::ClientContext* context, const ::GrpcApiPractice::Product& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(ListProduct, ::grpc::Status(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::GrpcApiPractice::ListProductResponse* response));
  MOCK_METHOD3(AsyncListProductRaw, ::grpc::ClientAsyncResponseReaderInterface< ::GrpcApiPractice::ListProductResponse>*(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(PrepareAsyncListProductRaw, ::grpc::ClientAsyncResponseReaderInterface< ::GrpcApiPractice::ListProductResponse>*(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq));
};

} // namespace GrpcApiPractice

