// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: Services/ClientService.proto

#include "Services/ClientService.pb.h"
#include "Services/ClientService.grpc.pb.h"

#include <grpcpp/support/async_stream.h>
#include <grpcpp/impl/codegen/sync_stream.h>
#include <gmock/gmock.h>
namespace GrpcApiPractice {

class MockClientServiceStub : public ClientService::StubInterface {
 public:
  MOCK_METHOD3(CreateClient, ::grpc::Status(::grpc::ClientContext* context, const ::GrpcApiPractice::Client& request, ::GrpcApiPractice::ServiceStatus* response));
  MOCK_METHOD3(AsyncCreateClientRaw, ::grpc::ClientAsyncResponseReaderInterface< ::GrpcApiPractice::ServiceStatus>*(::grpc::ClientContext* context, const ::GrpcApiPractice::Client& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(PrepareAsyncCreateClientRaw, ::grpc::ClientAsyncResponseReaderInterface< ::GrpcApiPractice::ServiceStatus>*(::grpc::ClientContext* context, const ::GrpcApiPractice::Client& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(ListClient, ::grpc::Status(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::GrpcApiPractice::ListClientResponse* response));
  MOCK_METHOD3(AsyncListClientRaw, ::grpc::ClientAsyncResponseReaderInterface< ::GrpcApiPractice::ListClientResponse>*(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(PrepareAsyncListClientRaw, ::grpc::ClientAsyncResponseReaderInterface< ::GrpcApiPractice::ListClientResponse>*(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq));
};

} // namespace GrpcApiPractice

