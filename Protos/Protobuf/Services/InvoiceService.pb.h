// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Services/InvoiceService.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Services_2fInvoiceService_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Services_2fInvoiceService_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "Models/Invoice.pb.h"
#include "Models/ServiceStatus.pb.h"
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Services_2fInvoiceService_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Services_2fInvoiceService_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Services_2fInvoiceService_2eproto;
namespace GrpcApiPractice {
class InvoiceByIdRequest;
struct InvoiceByIdRequestDefaultTypeInternal;
extern InvoiceByIdRequestDefaultTypeInternal _InvoiceByIdRequest_default_instance_;
class ListInvoiceResponse;
struct ListInvoiceResponseDefaultTypeInternal;
extern ListInvoiceResponseDefaultTypeInternal _ListInvoiceResponse_default_instance_;
}  // namespace GrpcApiPractice
PROTOBUF_NAMESPACE_OPEN
template<> ::GrpcApiPractice::InvoiceByIdRequest* Arena::CreateMaybeMessage<::GrpcApiPractice::InvoiceByIdRequest>(Arena*);
template<> ::GrpcApiPractice::ListInvoiceResponse* Arena::CreateMaybeMessage<::GrpcApiPractice::ListInvoiceResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace GrpcApiPractice {

// ===================================================================

class InvoiceByIdRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GrpcApiPractice.InvoiceByIdRequest) */ {
 public:
  inline InvoiceByIdRequest() : InvoiceByIdRequest(nullptr) {}
  ~InvoiceByIdRequest() override;
  explicit PROTOBUF_CONSTEXPR InvoiceByIdRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InvoiceByIdRequest(const InvoiceByIdRequest& from);
  InvoiceByIdRequest(InvoiceByIdRequest&& from) noexcept
    : InvoiceByIdRequest() {
    *this = ::std::move(from);
  }

  inline InvoiceByIdRequest& operator=(const InvoiceByIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline InvoiceByIdRequest& operator=(InvoiceByIdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InvoiceByIdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const InvoiceByIdRequest* internal_default_instance() {
    return reinterpret_cast<const InvoiceByIdRequest*>(
               &_InvoiceByIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(InvoiceByIdRequest& a, InvoiceByIdRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(InvoiceByIdRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InvoiceByIdRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InvoiceByIdRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InvoiceByIdRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const InvoiceByIdRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const InvoiceByIdRequest& from) {
    InvoiceByIdRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InvoiceByIdRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GrpcApiPractice.InvoiceByIdRequest";
  }
  protected:
  explicit InvoiceByIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInvoiceIdFieldNumber = 1,
  };
  // int64 invoice_id = 1;
  void clear_invoice_id();
  int64_t invoice_id() const;
  void set_invoice_id(int64_t value);
  private:
  int64_t _internal_invoice_id() const;
  void _internal_set_invoice_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:GrpcApiPractice.InvoiceByIdRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t invoice_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Services_2fInvoiceService_2eproto;
};
// -------------------------------------------------------------------

class ListInvoiceResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GrpcApiPractice.ListInvoiceResponse) */ {
 public:
  inline ListInvoiceResponse() : ListInvoiceResponse(nullptr) {}
  ~ListInvoiceResponse() override;
  explicit PROTOBUF_CONSTEXPR ListInvoiceResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ListInvoiceResponse(const ListInvoiceResponse& from);
  ListInvoiceResponse(ListInvoiceResponse&& from) noexcept
    : ListInvoiceResponse() {
    *this = ::std::move(from);
  }

  inline ListInvoiceResponse& operator=(const ListInvoiceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListInvoiceResponse& operator=(ListInvoiceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListInvoiceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListInvoiceResponse* internal_default_instance() {
    return reinterpret_cast<const ListInvoiceResponse*>(
               &_ListInvoiceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ListInvoiceResponse& a, ListInvoiceResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ListInvoiceResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListInvoiceResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListInvoiceResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ListInvoiceResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ListInvoiceResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ListInvoiceResponse& from) {
    ListInvoiceResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInvoiceResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GrpcApiPractice.ListInvoiceResponse";
  }
  protected:
  explicit ListInvoiceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInvoiceFieldNumber = 1,
  };
  // repeated .GrpcApiPractice.Invoice invoice = 1;
  int invoice_size() const;
  private:
  int _internal_invoice_size() const;
  public:
  void clear_invoice();
  ::GrpcApiPractice::Invoice* mutable_invoice(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::GrpcApiPractice::Invoice >*
      mutable_invoice();
  private:
  const ::GrpcApiPractice::Invoice& _internal_invoice(int index) const;
  ::GrpcApiPractice::Invoice* _internal_add_invoice();
  public:
  const ::GrpcApiPractice::Invoice& invoice(int index) const;
  ::GrpcApiPractice::Invoice* add_invoice();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::GrpcApiPractice::Invoice >&
      invoice() const;

  // @@protoc_insertion_point(class_scope:GrpcApiPractice.ListInvoiceResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::GrpcApiPractice::Invoice > invoice_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Services_2fInvoiceService_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InvoiceByIdRequest

// int64 invoice_id = 1;
inline void InvoiceByIdRequest::clear_invoice_id() {
  _impl_.invoice_id_ = int64_t{0};
}
inline int64_t InvoiceByIdRequest::_internal_invoice_id() const {
  return _impl_.invoice_id_;
}
inline int64_t InvoiceByIdRequest::invoice_id() const {
  // @@protoc_insertion_point(field_get:GrpcApiPractice.InvoiceByIdRequest.invoice_id)
  return _internal_invoice_id();
}
inline void InvoiceByIdRequest::_internal_set_invoice_id(int64_t value) {
  
  _impl_.invoice_id_ = value;
}
inline void InvoiceByIdRequest::set_invoice_id(int64_t value) {
  _internal_set_invoice_id(value);
  // @@protoc_insertion_point(field_set:GrpcApiPractice.InvoiceByIdRequest.invoice_id)
}

// -------------------------------------------------------------------

// ListInvoiceResponse

// repeated .GrpcApiPractice.Invoice invoice = 1;
inline int ListInvoiceResponse::_internal_invoice_size() const {
  return _impl_.invoice_.size();
}
inline int ListInvoiceResponse::invoice_size() const {
  return _internal_invoice_size();
}
inline ::GrpcApiPractice::Invoice* ListInvoiceResponse::mutable_invoice(int index) {
  // @@protoc_insertion_point(field_mutable:GrpcApiPractice.ListInvoiceResponse.invoice)
  return _impl_.invoice_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::GrpcApiPractice::Invoice >*
ListInvoiceResponse::mutable_invoice() {
  // @@protoc_insertion_point(field_mutable_list:GrpcApiPractice.ListInvoiceResponse.invoice)
  return &_impl_.invoice_;
}
inline const ::GrpcApiPractice::Invoice& ListInvoiceResponse::_internal_invoice(int index) const {
  return _impl_.invoice_.Get(index);
}
inline const ::GrpcApiPractice::Invoice& ListInvoiceResponse::invoice(int index) const {
  // @@protoc_insertion_point(field_get:GrpcApiPractice.ListInvoiceResponse.invoice)
  return _internal_invoice(index);
}
inline ::GrpcApiPractice::Invoice* ListInvoiceResponse::_internal_add_invoice() {
  return _impl_.invoice_.Add();
}
inline ::GrpcApiPractice::Invoice* ListInvoiceResponse::add_invoice() {
  ::GrpcApiPractice::Invoice* _add = _internal_add_invoice();
  // @@protoc_insertion_point(field_add:GrpcApiPractice.ListInvoiceResponse.invoice)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::GrpcApiPractice::Invoice >&
ListInvoiceResponse::invoice() const {
  // @@protoc_insertion_point(field_list:GrpcApiPractice.ListInvoiceResponse.invoice)
  return _impl_.invoice_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace GrpcApiPractice

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Services_2fInvoiceService_2eproto
